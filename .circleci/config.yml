# Python CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    environment:
      DEPLOYMENT_NAME: ci-cd
      PROJECT_ID: api-ci-cd
      CLUSTER_NAME: ci-cd
      CLUSTER_NAME_STAG: ci-cd-stag
      CLOUDSDK_COMPUTE_ZONE: us-west1-a
      CONTAINER_NAME: ci-cd
      IMAGE: ci-cd
      REG_ID: ci-cd
      REG_ID_PROD: ci-cd-prod
      IMG_TAG: 0.1.0
      PROJECT_NAME: ci-cd
      DEPLOYMENT_ENVIRONMENT: staging

    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=python-circleci-docker' >> $BASH_ENV
            echo $ACCOUNT_KEY_STAGING > service_key.txt
            base64 -i service_key.txt -d > ${HOME}/gcloud-service-key.json
            #gcloud auth activate-service-account ${ACCOUNT_ID} --key-file ${HOME}/gcloud-service-key.json
            #/home/arghyabs/google-cloud-sdk/bin/gcloud config set project $PROJECT_ID
            #/home/arghyabs/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
            #/home/arghyabs/google-cloud-sdk/bin/gcloud config set compute/zone $CLOUDSDK_COMPUTE_ZONE
            #/home/arghyabs/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      # Step 3: run linter and tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8 --exclude=venv* --statistics
            pytest -v --cov=calculator
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            . venv/bin/activate
            pyinstaller -F calculator.py
            docker build -t ${IMAGE_NAME} .
            docker tag ${IMAGE_NAME} gcr.io/${PROJECT_ID}/${IMAGE_NAME}:$TAG
            sudo /home/arghyabs/google-cloud-sdk/bin/gcloud auth configure-docker
            sudo /home/arghyabs/google-cloud-sdk/bin/gcloud docker -- push gcr.io/${PROJECT_ID}/${IMAGE_NAME}:$TAG
